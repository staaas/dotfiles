---
- include_tasks: sway.yml

- name: install terminal emulators
  pacman:
    state: present
    package: alacritty
  become: true
- name: ensure .config/alacritty exists
  file: path={{ ansible_env.HOME }}/.config/alacritty state=directory recurse=yes
- name: configure terminal emulator alacritty
  copy: src=templates/alacritty/alacritty.yml dest={{ ansible_env.HOME }}/.config/alacritty/alacritty.yml
- name: copy alacritty wrapper script
  copy: src=templates/term dest=/usr/bin/term mode=0555 owner=root group=root
  become: true

- include_tasks: multimedia.yml

- include_tasks: office.yml

- include_tasks: p2p.yml

- name: install browsers
  pacman:
    state:  present
    package:
    - firefox
    - firefox-ublock-origin
    - firefox-extension-privacybadger
    - firefox-extension-https-everywhere
    - firefox-extension-multi-account-containers  # from AUR
    - chromium
  become: true
- name: persist chromium command line flags
  template: src=templates/chromium-flags.conf dest={{ ansible_env.HOME }}/.config/chromium-flags.conf

- name: install logseq
  pacman: package=logseq-desktop state=installed
  become: true
- name: create /usr/bin/lsq for starting logseq under wayland
  copy:
    content: "#!/usr/bin/env sh\n/usr/bin/logseq --enable-features=UseOzonePlatform --ozone-platform=wayland\n"
    dest: /usr/bin/lsq
    mode: "0555"
    owner: root
    group: root
  become: true

- name: install element-desktop
  pacman: package=element-desktop state=installed
  become: true
- name: create /usr/bin/element for starting element-desktop under wayland
  copy:
    content: "#!/usr/bin/env sh\n/usr/bin/element-desktop --enable-features=UseOzonePlatform --ozone-platform=wayland\n"
    dest: /usr/bin/elm
    mode: "0555"
    owner: root
    group: root
  become: true

- name: create /usr/bin/signal for starting signal-desktop
  copy:
    content: "#!/usr/bin/env sh\n/usr/bin/signal-desktop --enable-features=UseOzonePlatform --ozone-platform=wayland\n"
    dest: /usr/bin/signal
    mode: "0555"
    owner: root
    group: root
  become: true

- name: install IM clients
  pacman:
    state: present
    package:
    - telegram-desktop
    - weechat
    - weechat-matrix

- name: install email client aerc
  pacman:
    state: present
    package:
    - aerc
    - dante  # optional dependency for aerc, provides script socksify
    - w3m  # optional dependency for aerc
    - helix  # my editor of choice
- name: ensure .config/aerc exists
  file: path={{ ansible_env.HOME }}/.config/aerc state=directory recurse=yes
- name: create aerc-specific helix config file
  copy: content='theme = "base16_transparent"' dest={{ansible_env.HOME}}/.config/aerc/helix.toml
- name: copy initial config for aerc if not exists
  copy: src=/usr/share/aerc/aerc.conf dest={{ ansible_env.HOME }}/.config/aerc/aerc.conf force=no
- name: use helix for composing emails in aerc
  lineinfile: >
    dest={{ ansible_env.HOME }}/.config/aerc/aerc.conf
    line="editor=helix -c {{ansible_env.HOME}}/.config/aerc/helix.toml"
    regexp="editor="
- name: display html emails in aerc
  lineinfile: >
    dest={{ ansible_env.HOME }}/.config/aerc/aerc.conf
    line="text/html=/usr/share/aerc/filters/html"
    regexp="^#?text/html="
- name: install mbsync service and timer
  copy: src=templates/mbsync/mbsync.{{item}} dest=/usr/lib/systemd/system/mbsync@.{{item}}
  with_items:
  - service
  - timer
  become: true
- name: start mbsync timer
  systemd: name=mbsync@{{ ansible_user_id }}.timer state=started enabled=yes daemon_reload=yes
  become: true

- name: install fonts
  pacman:
    state: present
    package:
    - ttf-anonymous-pro
    - ttf-dejavu
    - ttf-droid
    - gnu-free-fonts
    - ttf-inconsolata
    - ttf-liberation
    - ttf-ubuntu-font-family
  become: true

- name: set xdg user dirs
  copy: src=templates/user-dirs.dirs dest={{ ansible_env.HOME }}/.config/user-dirs.dirs
- name: install xdg-user-dirs
  pacman: package=xdg-user-dirs state=present
  become: true

- name: set default apps
  copy: src=templates/mimeapps.list dest={{ ansible_env.HOME }}/.config/mimeapps.list

- name: install Intel AMT management software
  pacman:
    state: present
    package:
    - remmina
    - libvncserver
  become: true

- name: install LanguageTool
  pacman: package=languagetool state=present
  become: true
- name: start LanguageTool
  systemd: name=languagetool.service state=started enabled=yes daemon_reload=yes
  become: true
